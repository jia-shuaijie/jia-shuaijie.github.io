import{_ as n,o as s,c as a,e as p}from"./app-BQzoQ3UK.js";const t={},e=p(`<h1 id="责任链模式" tabindex="-1"><a class="header-anchor" href="#责任链模式"><span>责任链模式</span></a></h1><p>现在模拟一个需求:</p><p>需要检查一个产品的是否合格,需要从三个方面进行检查.</p><ol><li>长度 必须为15</li><li>宽度 必须为15</li><li>高度 必须为10</li></ol><p>如果我们直接进行判断的话后续如果产品又添加了其他检查类型,那么我们可能会一直if判断下去.</p><p>此时我们就可以使用责任链模式,将每个检查流程进行分隔处理且互相不影响各自的执行.</p><h2 id="实现代码" tabindex="-1"><a class="header-anchor" href="#实现代码"><span>实现代码</span></a></h2><h3 id="创建产品实体类" tabindex="-1"><a class="header-anchor" href="#创建产品实体类"><span>创建产品实体类</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>bamboo<span class="token punctuation">.</span>product<span class="token punctuation">.</span>entity</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>experimental<span class="token punctuation">.</span></span><span class="token class-name">Accessors</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bamboo<span class="token punctuation">.</span>product<span class="token punctuation">.</span>handler<span class="token punctuation">.</span></span><span class="token class-name">HeightQCHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bamboo<span class="token punctuation">.</span>product<span class="token punctuation">.</span>handler<span class="token punctuation">.</span></span><span class="token class-name">LengthQCHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bamboo<span class="token punctuation">.</span>product<span class="token punctuation">.</span>handler<span class="token punctuation">.</span></span><span class="token class-name">WidthQCHandler</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Product</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 产品长度
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> length<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 产品宽度
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> width<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 产品高度
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> height<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建责任链抽象类" tabindex="-1"><a class="header-anchor" href="#创建责任链抽象类"><span>创建责任链抽象类</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>bamboo<span class="token punctuation">.</span>product<span class="token punctuation">.</span>handler</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bamboo<span class="token punctuation">.</span>product<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Product</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">QCHandler</span> <span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token class-name">QCHandler</span> nextHandler<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 检查产品
     *
     * <span class="token keyword">@param</span> <span class="token parameter">product</span> 产品
     * <span class="token keyword">@return</span> Boolean
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token class-name">Boolean</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token class-name">Product</span> product<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 设置下一级处理器
     *
     * <span class="token keyword">@param</span> <span class="token parameter">nextHandler</span> 下一级处理器
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setNextHandler</span><span class="token punctuation">(</span><span class="token class-name">QCHandler</span> nextHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>nextHandler <span class="token operator">=</span> nextHandler<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 判断是否存在下一级处理器
     *
     * <span class="token keyword">@param</span> <span class="token parameter">product</span> 产品
     * <span class="token keyword">@return</span> Boolean
     */</span>
    <span class="token keyword">protected</span> <span class="token class-name">Boolean</span> <span class="token function">checkNextHandler</span><span class="token punctuation">(</span><span class="token class-name">Product</span> product<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//没有下一级处理器，直接返回false</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nextHandler <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token comment">// 存在下一级处理器，则校验下一级处理器</span>
        <span class="token keyword">return</span> nextHandler<span class="token punctuation">.</span><span class="token function">check</span><span class="token punctuation">(</span>product<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建长度处理器" tabindex="-1"><a class="header-anchor" href="#创建长度处理器"><span>创建长度处理器</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>bamboo<span class="token punctuation">.</span>product<span class="token punctuation">.</span>handler</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bamboo<span class="token punctuation">.</span>product<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Product</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LengthQCHandler</span> <span class="token keyword">extends</span> <span class="token class-name">QCHandler</span> <span class="token punctuation">{</span>

    <span class="token punctuation">{</span>
        <span class="token function">setNextHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WidthQCHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token class-name">Product</span> product<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>product<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">15</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;长度检查不合格!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">checkNextHandler</span><span class="token punctuation">(</span>product<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建宽度处理器" tabindex="-1"><a class="header-anchor" href="#创建宽度处理器"><span>创建宽度处理器</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bamboo<span class="token punctuation">.</span>product<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Product</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WidthQCHandler</span> <span class="token keyword">extends</span> <span class="token class-name">QCHandler</span> <span class="token punctuation">{</span>
    <span class="token punctuation">{</span>
        <span class="token function">setNextHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HeightQCHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token class-name">Product</span> product<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>product<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">15</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;宽度检查不合格!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">checkNextHandler</span><span class="token punctuation">(</span>product<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建高度处理器" tabindex="-1"><a class="header-anchor" href="#创建高度处理器"><span>创建高度处理器</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bamboo<span class="token punctuation">.</span>product<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Product</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HeightQCHandler</span> <span class="token keyword">extends</span> <span class="token class-name">QCHandler</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token class-name">Product</span> product<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>product<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">15</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;高度检查不合格!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">checkNextHandler</span><span class="token punctuation">(</span>product<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="调用测试" tabindex="-1"><a class="header-anchor" href="#调用测试"><span>调用测试</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Product</span> product <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Product</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLength</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setWidth</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">LengthQCHandler</span> lengthQCHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LengthQCHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 这里是使用默认写好的内置责任链来使用</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>lengthQCHandler<span class="token punctuation">.</span><span class="token function">check</span><span class="token punctuation">(</span>product<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 这里是自己手动去设置责任链调用,已知顺序的情况可以直接默认一条.</span>
        <span class="token class-name">HeightQCHandler</span> heightQCHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HeightQCHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">WidthQCHandler</span> widthQCHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WidthQCHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lengthQCHandler<span class="token punctuation">.</span><span class="token function">setNextHandler</span><span class="token punctuation">(</span>heightQCHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
        heightQCHandler<span class="token punctuation">.</span><span class="token function">setNextHandler</span><span class="token punctuation">(</span>widthQCHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>lengthQCHandler<span class="token punctuation">.</span><span class="token function">check</span><span class="token punctuation">(</span>product<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="工厂创建责任链" tabindex="-1"><a class="header-anchor" href="#工厂创建责任链"><span>工厂创建责任链</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bamboo<span class="token punctuation">.</span>product<span class="token punctuation">.</span>handler<span class="token punctuation">.</span></span><span class="token class-name">LengthQCHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>bamboo<span class="token punctuation">.</span>product<span class="token punctuation">.</span>handler<span class="token punctuation">.</span></span><span class="token class-name">QCHandler</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QCFactory</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 获取默认执行责任练
     *
     * <span class="token keyword">@return</span> QCHandler
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">QCHandler</span> <span class="token function">getDefaultQCHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">LengthQCHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 根据list顺序生成责任链并返回第一个
     *
     * <span class="token keyword">@param</span> <span class="token parameter">handlerList</span> 责任链集合
     * <span class="token keyword">@return</span> QCHandler
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">QCHandler</span> <span class="token function">getQCHandler</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">QCHandler</span><span class="token punctuation">&gt;</span></span> handlerList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>handlerList<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;handlerList is empty&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">QCHandler</span> qcHandler <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>handlerList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> item <span class="token operator">=</span> handlerList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>item <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                handlerList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>item <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setNextHandler</span><span class="token punctuation">(</span>handlerList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                item<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        qcHandler <span class="token operator">=</span> handlerList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> qcHandler<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),c=[e];function o(l,i){return s(),a("div",null,c)}const k=n(t,[["render",o],["__file","责任链模式.html.vue"]]),d=JSON.parse('{"path":"/dev/java/%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F.html","title":"责任链模式","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"实现代码","slug":"实现代码","link":"#实现代码","children":[{"level":3,"title":"创建产品实体类","slug":"创建产品实体类","link":"#创建产品实体类","children":[]},{"level":3,"title":"创建责任链抽象类","slug":"创建责任链抽象类","link":"#创建责任链抽象类","children":[]},{"level":3,"title":"创建长度处理器","slug":"创建长度处理器","link":"#创建长度处理器","children":[]},{"level":3,"title":"创建宽度处理器","slug":"创建宽度处理器","link":"#创建宽度处理器","children":[]},{"level":3,"title":"创建高度处理器","slug":"创建高度处理器","link":"#创建高度处理器","children":[]},{"level":3,"title":"调用测试","slug":"调用测试","link":"#调用测试","children":[]},{"level":3,"title":"工厂创建责任链","slug":"工厂创建责任链","link":"#工厂创建责任链","children":[]}]}],"git":{"updatedTime":1717731361000,"contributors":[{"name":"黑色的小火苗","email":"jiashuaijie@yeah.net","commits":1}]},"filePathRelative":"dev/java/责任链模式.md","excerpt":"\\n<p>现在模拟一个需求:</p>\\n<p>需要检查一个产品的是否合格,需要从三个方面进行检查.</p>\\n<ol>\\n<li>长度 必须为15</li>\\n<li>宽度 必须为15</li>\\n<li>高度 必须为10</li>\\n</ol>\\n<p>如果我们直接进行判断的话后续如果产品又添加了其他检查类型,那么我们可能会一直if判断下去.</p>\\n<p>此时我们就可以使用责任链模式,将每个检查流程进行分隔处理且互相不影响各自的执行.</p>\\n<h2>实现代码</h2>\\n<h3>创建产品实体类</h3>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">package</span> <span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>bamboo<span class=\\"token punctuation\\">.</span>product<span class=\\"token punctuation\\">.</span>entity</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">lombok<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Data</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">lombok<span class=\\"token punctuation\\">.</span>experimental<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Accessors</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>bamboo<span class=\\"token punctuation\\">.</span>product<span class=\\"token punctuation\\">.</span>handler<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">HeightQCHandler</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>bamboo<span class=\\"token punctuation\\">.</span>product<span class=\\"token punctuation\\">.</span>handler<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">LengthQCHandler</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>bamboo<span class=\\"token punctuation\\">.</span>product<span class=\\"token punctuation\\">.</span>handler<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">WidthQCHandler</span></span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token annotation punctuation\\">@Data</span>\\n<span class=\\"token annotation punctuation\\">@Accessors</span><span class=\\"token punctuation\\">(</span>chain <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Product</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">Integer</span> id<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 产品长度\\n     */</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">Integer</span> length<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 产品宽度\\n     */</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">Integer</span> width<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 产品高度\\n     */</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">Integer</span> height<span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>"}');export{k as comp,d as data};
