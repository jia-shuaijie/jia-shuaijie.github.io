import{_ as p,r as t,o,c as l,a as n,b as s,d as c,e as a}from"./app-BQzoQ3UK.js";const i={},r=a(`<h1 id="postgresql" tabindex="-1"><a class="header-anchor" href="#postgresql"><span>PostgreSql</span></a></h1><h2 id="不常用sql方法" tabindex="-1"><a class="header-anchor" href="#不常用sql方法"><span>不常用sql方法</span></a></h2><h3 id="查询所有表中是否存在某个字段" tabindex="-1"><a class="header-anchor" href="#查询所有表中是否存在某个字段"><span>查询所有表中是否存在某个字段</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span>
<span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span>
<span class="token keyword">WHERE</span> table_schema <span class="token operator">=</span> <span class="token string">&#39;public&#39;</span>
  <span class="token operator">and</span> column_name <span class="token operator">=</span> <span class="token string">&#39;要查询的字段名&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自增序列" tabindex="-1"><a class="header-anchor" href="#自增序列"><span>自增序列</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">-- 生成自增序列 定义自增序列时一般使用 表名称_id_seq 来表示</span>
<span class="token keyword">CREATE</span> SEQUENCE <span class="token string">&quot;public&quot;</span><span class="token punctuation">.</span><span class="token string">&quot;xxx_id_seq&quot;</span>
INCREMENT <span class="token number">1</span>
MINVALUE  <span class="token number">1</span>
<span class="token keyword">NO</span> MAXVALUE
<span class="token keyword">START</span> <span class="token number">1</span>
CACHE <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment">-- 将自增序列以下面这种形式弄好后,放至ID 默认值即可</span>
nextval<span class="token punctuation">(</span><span class="token string">&#39;xxx_id_seq&#39;</span>::regclass<span class="token punctuation">)</span>

<span class="token comment">-- 查询序列最大值</span>
<span class="token keyword">select</span> nextval<span class="token punctuation">(</span><span class="token string">&#39;xxx_id_seq&#39;</span>::regclass<span class="token punctuation">)</span>

<span class="token comment">--将当前序列值设置为当前表最大ID值</span>
<span class="token keyword">SELECT</span> setval<span class="token punctuation">(</span> <span class="token string">&#39;xxx_id_seq&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>表名称<span class="token punctuation">\`</span></span> <span class="token punctuation">)</span> <span class="token operator">+</span><span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="递归查询" tabindex="-1"><a class="header-anchor" href="#递归查询"><span>递归查询</span></a></h2><h3 id="父级递归查询子级" tabindex="-1"><a class="header-anchor" href="#父级递归查询子级"><span>父级递归查询子级</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">WITH</span> RECURSIVE cte <span class="token keyword">as</span> <span class="token punctuation">(</span>
 <span class="token keyword">select</span> id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>parent_id <span class="token keyword">from</span> <span class="token string">&#39;要查询的表&#39;</span> <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token string">&#39;父级ID&#39;</span>
 <span class="token keyword">union</span> <span class="token keyword">all</span>
 <span class="token keyword">select</span> <span class="token keyword">temp</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span><span class="token keyword">temp</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span><span class="token keyword">temp</span><span class="token punctuation">.</span>parent_id <span class="token keyword">from</span>  <span class="token string">&#39;要查询的表&#39;</span> <span class="token keyword">temp</span> <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span>  cte c  <span class="token keyword">on</span> <span class="token keyword">temp</span><span class="token punctuation">.</span>parent_id <span class="token operator">=</span> c<span class="token punctuation">.</span>id
<span class="token punctuation">)</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> cte
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="子级递归查询父级" tabindex="-1"><a class="header-anchor" href="#子级递归查询父级"><span>子级递归查询父级</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">WITH</span> RECURSIVE cte <span class="token keyword">as</span> <span class="token punctuation">(</span>
 <span class="token keyword">select</span> id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>parent_id <span class="token keyword">from</span> <span class="token string">&#39;要查询的表&#39;</span> <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token string">&#39;子集ID&#39;</span>
 <span class="token keyword">union</span> <span class="token keyword">all</span>
 <span class="token keyword">select</span> <span class="token keyword">temp</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span><span class="token keyword">temp</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span><span class="token keyword">temp</span><span class="token punctuation">.</span>parent_id <span class="token keyword">from</span>  <span class="token string">&#39;要查询的表&#39;</span> <span class="token keyword">temp</span> <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span>  cte c  <span class="token keyword">on</span> <span class="token keyword">temp</span><span class="token punctuation">.</span>id <span class="token operator">=</span> c<span class="token punctuation">.</span>parent_id
<span class="token punctuation">)</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> cte
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="根据父级获取子父级的组织拼接" tabindex="-1"><a class="header-anchor" href="#根据父级获取子父级的组织拼接"><span>根据父级获取子父级的组织拼接</span></a></h2><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">/*
    输出示例:
    测试顶级部门
    测试顶级部门-&gt;测试部门1
    测试顶级部门-&gt;测试部门1 -&gt; 测试部门2
    测试顶级部门-&gt;测试部门1 -&gt; 测试部门2 -&gt; 测试部门3

 */</span>
<span class="token keyword">WITH</span> RECURSIVE cte <span class="token keyword">as</span> <span class="token punctuation">(</span>
 <span class="token keyword">select</span> id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>parent_id<span class="token punctuation">,</span>cast<span class="token punctuation">(</span>name <span class="token keyword">as</span> <span class="token keyword">TEXT</span><span class="token punctuation">)</span> <span class="token keyword">as</span> path <span class="token keyword">from</span> <span class="token string">&#39;要查询的表&#39;</span> <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token string">&#39;父级ID&#39;</span> <span class="token operator">and</span> is_delete <span class="token operator">=</span> <span class="token number">0</span>
 <span class="token keyword">union</span> <span class="token keyword">all</span>
 <span class="token keyword">select</span> <span class="token keyword">temp</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span><span class="token keyword">temp</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span><span class="token keyword">temp</span><span class="token punctuation">.</span>parent_id<span class="token punctuation">,</span>cast<span class="token punctuation">(</span> c<span class="token punctuation">.</span>path<span class="token operator">||</span> <span class="token string">&#39;-&gt;&#39;</span><span class="token operator">||</span>  <span class="token keyword">temp</span><span class="token punctuation">.</span>name  <span class="token keyword">as</span> <span class="token keyword">TEXT</span><span class="token punctuation">)</span>path <span class="token keyword">from</span>  <span class="token string">&#39;要查询的表&#39;</span> <span class="token keyword">temp</span> <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span>  cte c  <span class="token keyword">on</span> <span class="token keyword">temp</span><span class="token punctuation">.</span>parent_id <span class="token operator">=</span> c<span class="token punctuation">.</span> id
 <span class="token keyword">where</span> <span class="token keyword">temp</span><span class="token punctuation">.</span>is_delete <span class="token operator">=</span> <span class="token number">0</span>
<span class="token punctuation">)</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> cte
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="根据子集获取从父级到当前子集的组织拼接" tabindex="-1"><a class="header-anchor" href="#根据子集获取从父级到当前子集的组织拼接"><span>根据子集获取从父级到当前子集的组织拼接</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">/*
    输出示例:
    测试顶级部门
    测试顶级部门-&gt;测试部门1
    测试顶级部门-&gt;测试部门1 -&gt; 测试部门2
    测试顶级部门-&gt;测试部门1 -&gt; 测试部门2 -&gt; 测试部门3

 */</span>
<span class="token keyword">WITH</span> RECURSIVE cte <span class="token keyword">as</span> <span class="token punctuation">(</span>
 <span class="token keyword">select</span> id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>parent_id<span class="token punctuation">,</span>cast<span class="token punctuation">(</span>name <span class="token keyword">as</span> <span class="token keyword">TEXT</span><span class="token punctuation">)</span> <span class="token keyword">as</span> path <span class="token keyword">from</span> <span class="token string">&#39;要查询的表&#39;</span> <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token string">&#39;子集ID&#39;</span>
 <span class="token keyword">union</span> <span class="token keyword">all</span>
 <span class="token keyword">select</span> <span class="token keyword">temp</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span><span class="token keyword">temp</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span><span class="token keyword">temp</span><span class="token punctuation">.</span>parent_id<span class="token punctuation">,</span>cast<span class="token punctuation">(</span> <span class="token keyword">temp</span><span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token string">&#39;-&gt;&#39;</span><span class="token operator">||</span> c<span class="token punctuation">.</span>path  <span class="token keyword">as</span> <span class="token keyword">TEXT</span><span class="token punctuation">)</span>path <span class="token keyword">from</span>  <span class="token string">&#39;要查询的表&#39;</span> <span class="token keyword">temp</span> <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span>  cte c  <span class="token keyword">on</span> <span class="token keyword">temp</span><span class="token punctuation">.</span>id <span class="token operator">=</span> c<span class="token punctuation">.</span> parent_id
<span class="token punctuation">)</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> cte
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="json操作" tabindex="-1"><a class="header-anchor" href="#json操作"><span>Json操作</span></a></h2>`,16),d={href:"http://www.postgres.cn/docs/12/functions-json.html",target:"_blank",rel:"noopener noreferrer"},k=a('<h3 id="json和-jsonb操作符" tabindex="-1"><a class="header-anchor" href="#json和-jsonb操作符"><span>json和 jsonb操作符</span></a></h3><p><img src="https://img.gsimg.top/2024/04/08/nt19ku.png" alt="json&amp;jsonb"></p><h3 id="额外jsonb操作符" tabindex="-1"><a class="header-anchor" href="#额外jsonb操作符"><span>额外jsonb操作符</span></a></h3><p><img src="https://img.gsimg.top/2024/04/08/nt13np.png" alt="jsonb"></p>',4);function u(m,v){const e=t("ExternalLinkIcon");return o(),l("div",null,[r,n("p",null,[s("可以参考"),n("a",d,[s("官网"),c(e)]),s("Json 字符串的解释")]),k])}const h=p(i,[["render",u],["__file","postgresql.html.vue"]]),w=JSON.parse(`{"path":"/dev/sql/postgresql.html","title":"PostgreSql","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"不常用sql方法","slug":"不常用sql方法","link":"#不常用sql方法","children":[{"level":3,"title":"查询所有表中是否存在某个字段","slug":"查询所有表中是否存在某个字段","link":"#查询所有表中是否存在某个字段","children":[]},{"level":3,"title":"自增序列","slug":"自增序列","link":"#自增序列","children":[]}]},{"level":2,"title":"递归查询","slug":"递归查询","link":"#递归查询","children":[{"level":3,"title":"父级递归查询子级","slug":"父级递归查询子级","link":"#父级递归查询子级","children":[]},{"level":3,"title":"子级递归查询父级","slug":"子级递归查询父级","link":"#子级递归查询父级","children":[]}]},{"level":2,"title":"根据父级获取子父级的组织拼接","slug":"根据父级获取子父级的组织拼接","link":"#根据父级获取子父级的组织拼接","children":[{"level":3,"title":"根据子集获取从父级到当前子集的组织拼接","slug":"根据子集获取从父级到当前子集的组织拼接","link":"#根据子集获取从父级到当前子集的组织拼接","children":[]}]},{"level":2,"title":"Json操作","slug":"json操作","link":"#json操作","children":[{"level":3,"title":"json和 jsonb操作符","slug":"json和-jsonb操作符","link":"#json和-jsonb操作符","children":[]},{"level":3,"title":"额外jsonb操作符","slug":"额外jsonb操作符","link":"#额外jsonb操作符","children":[]}]}],"git":{"updatedTime":1717731361000,"contributors":[{"name":"黑色的小火苗","email":"jiashuaijie@yeah.net","commits":1}]},"filePathRelative":"dev/sql/postgresql.md","excerpt":"\\n<h2>不常用sql方法</h2>\\n<h3>查询所有表中是否存在某个字段</h3>\\n<div class=\\"language-sql\\" data-ext=\\"sql\\" data-title=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token keyword\\">select</span> <span class=\\"token operator\\">*</span>\\n<span class=\\"token keyword\\">from</span> information_schema<span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">columns</span>\\n<span class=\\"token keyword\\">WHERE</span> table_schema <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'public'</span>\\n  <span class=\\"token operator\\">and</span> column_name <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'要查询的字段名'</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>"}`);export{h as comp,w as data};
