import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,a as n}from"./app-DumSWCfy.js";const l={},e=n(`<h1 id="redis" tabindex="-1"><a class="header-anchor" href="#redis"><span>redis</span></a></h1><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><blockquote><p>redis 是什么?</p></blockquote><p>Redis（Remote Dictionary Server ），即远程字典服务，是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。</p><p>免费开源! 是当下最热门的NoSQL技术之一! 也被人称之为结构化数据库!</p><blockquote><p>redis 能做什么?</p></blockquote><ol><li>内存存储,持久化,内存中是断电即失,所以说持久化很重要(rdb,aof)</li><li>效率高,可用用于高速缓存</li><li>发布订阅系统</li><li>地图信息分析</li><li>计时器,计数器(浏览量!)</li><li>...</li></ol><blockquote><p>特性</p></blockquote><ol><li>多样的数据类型</li><li>持久化</li><li>集群</li><li>事务</li><li>....</li></ol><blockquote><p>学习中需要用到的东西</p></blockquote><ol><li>狂神的公众号: 狂神说 (本文学习狂神说来的)</li><li>官网: <a href="https://redis.io/downloads/" target="_blank" rel="noopener noreferrer">https://redis.io/downloads/</a></li><li>英文官网命令查询: <a href="https://redis.io/docs/latest/commands/" target="_blank" rel="noopener noreferrer">https://redis.io/docs/latest/commands/</a></li></ol><p>注意: Windows再Github上下载(停止更新很久了)</p><p><mark>Redis推荐都是再linux服务器上搭建的, 我们是基于Linux学习</mark></p><h2 id="linux安装" tabindex="-1"><a class="header-anchor" href="#linux安装"><span>Linux安装</span></a></h2><ol><li><p>下载安装包! 最新稳定版本: 最新的稳定版本始终可在固定 <a href="https://download.redis.io/redis-stable.tar.gz" target="_blank" rel="noopener noreferrer">https://download.redis.io/redis-stable.tar.gz</a> URL 及其 SHA-256 总和中找到</p><figure><img src="https://i.jpg.dog/fde8293541278f1dae1f55be6b23bd99.png" alt="找下载示例" tabindex="0" loading="lazy"><figcaption>找下载示例</figcaption></figure></li><li><p>将安装包上传到linux服务器上并解压[ 上传目录为 <code>/opt</code>]</p></li><li><p>安装gcc,执行 <code>yum install gcc-c++</code>命令即可</p></li><li><p>在reids根目录执行</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">make</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>redis的默认安装路径 <code>/usr/local/bin</code></p></li><li><p>将redis配置文件复制到 <code>/usr/local/bin</code> 目录下</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> my-config</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /opt/redis/redis.conf</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> my-config</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>redis默认不是后台启动的,需修改配置文件.</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># redis.conf</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 找到dameonize 将参数修改为yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">dameonize</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> yes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动redis服务</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 通过指定的配置文件启动服务</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">redis-server</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /usr/local/bin/my-config/redis.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>使用redis客户端进行链接测试</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 使用redis客户端进行链接</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">reids-cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 6379</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查看redis进程是否开启命令 <code>ps -ef|grep redis</code></p></li><li><p>关闭redis服务命令 <code>shutdown</code></p></li></ol><h2 id="测试性能" tabindex="-1"><a class="header-anchor" href="#测试性能"><span>测试性能</span></a></h2><p><strong>redis-benchmark</strong> 是一个压力测试工具.</p><p>官方自带的性能测试工具!</p><p>使用: redis-benchmark 命令参数!</p><p>命令参数[图片来自菜鸟教程]:</p><figure><img src="https://i.jpg.dog/fb15e2e3bc5eb4fd9124590754005d48.png" alt="redis命令参数" tabindex="0" loading="lazy"><figcaption>redis命令参数</figcaption></figure><p>简单测试下</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 测试: 100个并发链接 100000请求</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">redis-benchmark</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -h</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> localhost</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 6379</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 100000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i.jpg.dog/b99bd7bdfebf880a18d7a35dff1d4ab2.png" alt="Snipaste 2024 06 26 17 58 26" tabindex="0" loading="lazy"><figcaption>Snipaste 2024 06 26 17 58 26</figcaption></figure><h2 id="基础知识" tabindex="-1"><a class="header-anchor" href="#基础知识"><span>基础知识</span></a></h2><p>redis默认存在16个数据库</p><ol><li>切换数据库命令: <code>select index</code> index为几号数据库.</li><li>查看库数据大小命令: <code>dbsize</code></li><li>查看所有的key命令: <code>keys *</code></li><li>清空当前数据库命令: <code>flushdb</code></li><li>清空全部数据库内容命令: <code>flushall</code></li></ol><blockquote><p>redis 是单线程的.</p></blockquote><p>Redis为什么单线程还很快?</p><ol><li>误区1: 高性能服务器一定是多线程的?</li><li>误区2: 多线程(CPU上下文会切换)一定比单线程效率高!</li></ol><p>核心:</p><ol><li>redis是将所有的数据全部放在内存中的,所以说使用单线程去操作效率就是最高的.</li><li>多线程的上下文切换本身就是耗时操作,但对于内存系统来说没有上下文切换效率就是最高的.</li><li>多次读写都是在一个CPU上的,在内存情况下,这个就是最佳的方案.</li></ol><h2 id="五大数据类型" tabindex="-1"><a class="header-anchor" href="#五大数据类型"><span>五大数据类型</span></a></h2><h3 id="redis-key" tabindex="-1"><a class="header-anchor" href="#redis-key"><span>Redis-key</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 更换数据库</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> index</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 查看数据库现在有多少key</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">dbsize</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 查看库内所有的key</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">keys</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> *</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 将当前数据库清空</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">flushdb</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 清空所有数据库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">flushall</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># expire 过期命令 key 要被过期的名称 seconds 多少秒后过期</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">expire</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> seconds</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># ttl 查看过期时间命令 查看key还有多长时间过期</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 注意: -2 表示已经过期</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ttl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># del 删除命令 将key从redis中删除</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">del</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># move 移动命令 将key从当前数据库移动至指定数据库中</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">move</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> db</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># type 查看key所存储的类型</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># exists 查看key是否存在的命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">exists</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="string-字符串" tabindex="-1"><a class="header-anchor" href="#string-字符串"><span>String(字符串)</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># set 设置一个key, key 存储的键名 value 存储的值</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">set</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 将value关联到key,并将key的过期时间设置为seconds(以秒为单位)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">setex</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> seconds</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 当key不存在时设置key的值,当key存在时不会设置.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">setnx</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 给key设置一个新的value值并将旧值返回回去</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getset</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># append 追加命令 在key的后面追加上value的值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># get 获取命令,获取key的value值返回</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># strlen 查看key的长度</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">strlen</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="同时设置或获取多个属性值" tabindex="-1"><a class="header-anchor" href="#同时设置或获取多个属性值"><span>同时设置或获取多个属性值</span></a></h4><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 同时设置一个或多个key-value,且所有给定的key都不存在</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 如果key存在时新值会覆盖旧值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mset</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value[key1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ...]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 同时设置一个或多个key-value,当所有key都不存在时成功</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 这是一个原子性的操作,要么一起成功,要么一起失败</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">msetnx</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> vlaue[key1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value1]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 获取所有给定的key的值,value值返回的索引位置与key的顺序一致</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mget</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key1[key2..]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="字符串范围获取或替换" tabindex="-1"><a class="header-anchor" href="#字符串范围获取或替换"><span>字符串范围获取或替换</span></a></h4><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 获取key关联的value,且获取value从start位置到end位置的字符进行返回</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">getrange</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 将key的value进行覆写,从偏移量(offset)开始</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">setrange</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> offset</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="自增或自减" tabindex="-1"><a class="header-anchor" href="#自增或自减"><span>自增或自减</span></a></h4><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 将key中存储的数字值增1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">incr</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 对key的值加上指定的增值量(increment)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">incrby</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> increment</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 对key的值加上指定的浮点增值量(increment)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">incrbyfloat</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> increment</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 对key中存储的数字值减一</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">decr</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 对key所存储的值减去指定的减量值(decrement)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">decrby</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> decrement</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="list-列表" tabindex="-1"><a class="header-anchor" href="#list-列表"><span>List(列表)</span></a></h3><p>可以当成栈,队列,阻塞队列使用.</p><ul><li>本质上是一个链表, before node after, left right 都可以插入值</li><li>当key不存在,创建新的链表,key存在新增内容</li><li>如果移除了所有值,空链表,也代表不存在</li><li>两个插入或改动值,效率最高! 中间元素,相对来说效率会低一点.</li></ul><p>消息队列: lpush rpop 栈: lpush lpop</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 获取key的长度.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">llen</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># lpush 向list添加一个或多个值添加到列表头部</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 当添加多个值的时候,value2会在value1前面,因为这个命令是向列表头部添加一个值</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 也就是多个值时,先进入的反而在最后,最后进入的反而在最前面</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lpush</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value1[value2...]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># lpushx 向已存在的列表的头部添加一个值,列表不存在时不执行且返回0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lpushx</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># rpush 向列表尾部添加一个或多个值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">rpush</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value1[value2...]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># rpushx 为已存在的列表的尾部添加值,列表不存在时不执行且返回0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">rpushx</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 通过索引设置列表指定位置的值,当key不存在时会报错,当索引不存在时也不执行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 例如key中长度为3但是向索引为10的位置设置值时就是失败的.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lset</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> index</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 在列表的元素前或后插入元素</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 向pivot[元素名]前或后插入value</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">LINSERT</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> BEFORE</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">AFTER</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pivot</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="获取列表中的元素" tabindex="-1"><a class="header-anchor" href="#获取列表中的元素"><span>获取列表中的元素</span></a></h4><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 取出指定范围内的元素,当 start=0 stop=-1时会取出全部</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lrange</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> stop</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 通过索引获取列表中的元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lindex</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> index</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="移除或弹出一个元素" tabindex="-1"><a class="header-anchor" href="#移除或弹出一个元素"><span>移除或弹出一个元素</span></a></h4><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># lpop 移除并获取列表的第一位元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lpop</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># rpop 移除并获取列表的最后一位元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">rpop</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 移除key中指定个数的value, count 代表要移除的个数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 移除时是从头部开始找要移除的元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">lrem</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> count</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 移除key中指定个数的value,conunt 代表要移除的个数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 移除时是从尾部开始找要移除的元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">rrem</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> cont</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 移除source列表的最后一位元素,并将该元素添加到destination列表的头部,最后将source移除的元素返回</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># destination不存在时会创建</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">rpoplpush</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> source</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> destination</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="阻塞命令" tabindex="-1"><a class="header-anchor" href="#阻塞命令"><span>阻塞命令</span></a></h4><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 移出并获取列表的第一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 当列表中存在元素时会直接从头部移除一位,若列表中没有任何元素时也就是这个key都不存在的情况下,会阻塞指定的秒数[timeout]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">blpop</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key1[key2]</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> timeout</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 移出并获取列表的最后一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 当列表中存在元素时会直接从尾部移除一位元素,若列表中没有任何元素时也就是这个key都不存在的情况下,会阻塞指定的秒数[timeout]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">brpop</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key1[key2]</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> timeout</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 从列表中弹出一个值，将弹出的元素插入到另外一个列表中并返回它；</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 将source尾部移除一个值,追加到destination的头部,当source不存在元素时,阻塞指定的秒数[timeout]或发现一个元素可以弹出</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">brpoplpush</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> source</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> destination</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> timeout</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="保留区间内的元素" tabindex="-1"><a class="header-anchor" href="#保留区间内的元素"><span>保留区间内的元素</span></a></h4><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 对一个列表进行修建,仅保留指定区间内的元素,不存在区间内的元素都被删除</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 这个区间是个闭区间,也就是指定的索引位也包含在内</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ltrim</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> stop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set-集合" tabindex="-1"><a class="header-anchor" href="#set-集合"><span>Set(集合)</span></a></h3><p>set中的值是不能重复的.</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 向集合中添加一个或多个成员,成员不能重复</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sadd</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> member1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [member2]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 判断 member 元素是否是集合 key 的成员</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">SISMEMBER</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> member</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 返回集合中的所有成员</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">SMEMBERS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 将 member 元素从 source 集合移动到 destination 集合</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">SMOVE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> source</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> destination</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> member</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 移除并返回集合中的一个随机元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">SPOP</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 返回集合中一个或多个随机数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">SRANDMEMBER</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [count]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 移除集合中一个或多个成员</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">SREM</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> member1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [member2]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 迭代集合中的元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">SSCAN</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> cursor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [MATCH </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">pattern]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [COUNT </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">count]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 返回第一个集合与其他集合之间的差异。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">SDIFF</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [key2]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 获取集合的成员数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">SCARD</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="交集" tabindex="-1"><a class="header-anchor" href="#交集"><span>交集</span></a></h4><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 返回给定所有集合的交集</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">SINTER</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [key2]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 返回给定所有集合的差集并存储在 destination 中</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">SDIFFSTORE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> destination</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [key2]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="并集" tabindex="-1"><a class="header-anchor" href="#并集"><span>并集</span></a></h4><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#返回所有给定集合的并集</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">SUNION</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [key2]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 所有给定集合的并集存储在 destination 集合中</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">SUNIONSTORE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> destination</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [key2]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hash" tabindex="-1"><a class="header-anchor" href="#hash"><span>Hash</span></a></h3><p>Map集合,key-map这时候值是map集合</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 将哈希表key中的字段field的值设置为value.redis4.0后该命令支持设置多个field</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">hset</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> field</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 将哈希表key中的字段field的值不存在时,设置值为value</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">HSETNX</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> field</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 同时将多个field-value设置到hash表的key中,该命令后续已经移除</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">hmset</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> field1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [field2 </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">value2]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 获取存储在哈希表中指定字段的值。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">HGET</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> field</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 获取所有给定字段的值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">hmget</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> field1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [field2]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 获取在哈希表中指定 key 的所有字段和值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">hgetAll</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 查看哈希表 key 中，指定的字段是否存在。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">HEXISTS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> field</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 删除一个或多个哈希表字段</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">HDEL</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> field1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [field2]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#获取哈希表中的所有字段</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">HKEYS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 获取哈希表中所有的值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">hvals</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 获取哈希表中字段的数量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">HLEN</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 迭代hash表中的键值对</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">HSCAN</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> cursor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [MATCH </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">pattern]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [COUNT </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">count]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="字段添加指定增量" tabindex="-1"><a class="header-anchor" href="#字段添加指定增量"><span>字段添加指定增量</span></a></h4><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 为哈希表 key 中的指定字段的整数值加上增量 increment 。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">HINCRBY</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> field</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> increment</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 为哈希表 key 中的指定字段的浮点数值加上增量 increment 。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">HINCRBYFLOAT</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> field</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> increment</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="zset-有序集合" tabindex="-1"><a class="header-anchor" href="#zset-有序集合"><span>Zset(有序集合)</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 获取有序集合的成员数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZCARD</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 向有序集合添加一个或多个成员，或者更新已存在成员的分数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 新成员会从头部进行插入,而不是从尾部插入.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZADD</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> score1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> member1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [score2 </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">member2]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 返回有序集合中指定成员的索引</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZRANK</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> member</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 返回有序集中，成员的分数值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZSCORE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> member</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 通过索引区间返回有序集合指定区间内的成员</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZRANGE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> stop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [WITHSCORES]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 返回有序集中指定区间内的成员，通过索引，分数从高到低</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZREVRANGE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> stop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [WITHSCORES]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 返回有序集中指定分数区间内的成员，分数从高到低排序</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># -inf 代表负无穷 +inf 代表正无穷</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZREVRANGEBYSCORE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> max</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> min</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [WITHSCORES]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 返回有序集合中指定成员的排名，有序集成员按分数值递减(从大到小)排序</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZREVRANK</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> member</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 通过字典区间返回有序集合的成员</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZRANGEBYLEX</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> min</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> max</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [LIMIT </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">offset</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> count]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 通过分数返回有序集合指定区间内的成员</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZRANGEBYSCORE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> min</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> max</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [WITHSCORES] [LIMIT]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#移除有序集合中的一个或多个成员</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZREM</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> member</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [member </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">...]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 移除有序集合中给定的字典区间的所有成员</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZREMRANGEBYLEX</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> min</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> max</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 移除有序集合中给定的排名区间的所有成员</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZREMRANGEBYRANK</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> stop</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 移除有序集合中给定的分数区间的所有成员</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZREMRANGEBYSCORE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> min</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> max</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 计算在有序集合中指定区间分数的成员数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZCOUNT</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> min</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> max</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 在有序集合中计算指定字典区间内成员数量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZLEXCOUNT</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> min</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> max</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 计算给定的一个或多个有序集的交集并将结果集存储在新的有序集合 destination 中</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZINTERSTORE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> destination</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> numkeys</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [key </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">...]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 计算给定的一个或多个有序集的并集，并存储在新的 key 中</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZUNIONSTORE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> destination</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> numkeys</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [key </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">...]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 迭代有序集合中的元素（包括元素成员和元素分值）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZSCAN</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> cursor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [MATCH </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">pattern]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [COUNT </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">count]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="对分数进行指定增量" tabindex="-1"><a class="header-anchor" href="#对分数进行指定增量"><span>对分数进行指定增量</span></a></h4><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 有序集合中对指定成员的分数加上增量 increment</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ZINCRBY</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> increment</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> member</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="geo-地理位置" tabindex="-1"><a class="header-anchor" href="#geo-地理位置"><span>Geo(地理位置)</span></a></h3><p>Redis GEO 主要用于存储地理位置信息，并对存储的信息进行操作，该功能在 Redis 3.2 版本新增。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 添加地理位置的坐标。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">GEOADD</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> longitude</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> latitude</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> member</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [longitude </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">latitude</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> member</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ...]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 获取地理位置的坐标。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">GEOPOS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> member</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [member </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">...]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 计算两个位置之间的距离。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">GEODIST</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> member1</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> member2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [m</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">km</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ft</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mi]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 根据用户给定的经纬度坐标来获取指定范围内的地理位置集合。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">GEORADIUS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> longitude</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> latitude</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> radius</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> m</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">km</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ft</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [WITHCOORD] [WITHDIST] [WITHHASH] [COUNT count] [ASC</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">DESC] [STORE key] [STOREDIST key]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 根据储存在位置集合里面的某个地点获取指定范围内的地理位置集合。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">GEORADIUSBYMEMBER</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> member</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> radius</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> m</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">km</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ft</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mi</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [WITHCOORD] [WITHDIST] [WITHHASH] [COUNT count] [ASC</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">DESC] [STORE key] [STOREDIST key]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 返回一个或多个位置对象的 geohash 值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">GEOHASH</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> member</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [member </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">...]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hyperloglog-基数统计" tabindex="-1"><a class="header-anchor" href="#hyperloglog-基数统计"><span>hyperLogLog(基数统计)</span></a></h3><p>Redis 在 2.8.9 版本添加了 HyperLogLog 结构。</p><p>Redis HyperLogLog 是用来做基数统计的算法，HyperLogLog 的优点是，在输入元素的数量或者体积非常非常大时，计算基数所需的空间总是固定 的、并且是很小的。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 添加指定元素到 HyperLogLog 中。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">PFADD</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> element</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [element </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">...]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 返回给定 HyperLogLog 的基数估算值。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">PFCOUNT</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [key </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">...]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 将多个 HyperLogLog 合并为一个 HyperLogLog</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">PFMERGE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> destkey</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> sourcekey</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [sourcekey </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">...]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stream" tabindex="-1"><a class="header-anchor" href="#stream"><span>stream</span></a></h3><p>Redis Stream 是 Redis 5.0 版本新增加的数据结构。</p><p>Redis Stream 主要用于消息队列（MQ，Message Queue），Redis 本身是有一个 Redis 发布订阅 (pub/sub) 来实现消息队列的功能， 但它有个缺点就是消息无法持久化，如果出现网络断开、Redis 宕机等，消息就会被丢弃。</p><h4 id="消息队列相关命令" tabindex="-1"><a class="header-anchor" href="#消息队列相关命令"><span>消息队列相关命令</span></a></h4><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># XADD - 添加消息到末尾 key 队列名称 id 消息id field value记录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">XADD</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ID</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> field</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [field </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">value</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ...]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># XTRIM - 对流进行修剪，限制长度 key队列名称 maxlen 长度 count 数量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">XTRIM</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> MAXLEN</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [~] count</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># XDEL - 删除消息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">XDEL</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ID</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [ID </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">...]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># XLEN - 获取流包含的元素数量，即消息长度</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">XLEN</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># XRANGE - 获取消息列表，会自动过滤已经删除的消息</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># start ：开始值， - 表示最小值 end ：结束值， + 表示最大值 count ：数量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">XRANGE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> end</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [COUNT </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">count]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># XREVRANGE - 反向获取消息列表，ID 从大到小</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># start ：开始值， - 表示最小值 end ：结束值， + 表示最大值 count ：数量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">XREVRANGE</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> end</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [COUNT </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">count]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># XREAD - 以阻塞或非阻塞方式获取消息列表</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># count ：数量 milliseconds ：可选，阻塞毫秒数，没有设置就是非阻塞模式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># key ：队列名 id ：消息 ID</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">XREAD</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [COUNT </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">count]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [BLOCK </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">milliseconds]</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> STREAMS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [key </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">...]</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [id </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">...]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="消费者组相关命令" tabindex="-1"><a class="header-anchor" href="#消费者组相关命令"><span>消费者组相关命令</span></a></h4><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># XGROUP CREATE - 创建消费者组</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># key ：队列名称，如果不存在就创建</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># groupname ：组名。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># $ ： 表示从尾部开始消费，只接受新消息，当前 Stream 消息会全部忽略。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 0-0: 表示从头消费</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">XGROUP</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [CREATE </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> groupname</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> id-or-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [SETID </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> groupname</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> id-or-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [DESTROY </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> groupname]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [DELCONSUMER </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">key</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> groupname</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> consumername]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># XREADGROUP GROUP - 读取消费者组中的消息</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># group ：消费组名</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># consumer ：消费者名。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># count ： 读取数量。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># milliseconds ： 阻塞毫秒数。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># key ： 队列名。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># ID ： 消息 ID。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">XREADGROUP</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> GROUP</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> group</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> consumer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [COUNT </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">count]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [BLOCK </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">milliseconds]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [NOACK] STREAMS key [key ...] ID [ID ...]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">XACK</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 将消息标记为&quot;已处理&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">XGROUP</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> SETID</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 为消费者组设置新的最后递送消息ID</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">XGROUP</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> DELCONSUMER</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 删除消费者</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">XGROUP</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> DESTROY</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 删除消费者组</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">XPENDING</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 显示待处理消息的相关信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">XCLAIM</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 转移消息的归属权</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">XINFO</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 查看流和消费者组的相关信息；</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">XINFO</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> GROUPS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 打印消费者组的信息；</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">XINFO</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> STREAM</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 打印流信息</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="事务" tabindex="-1"><a class="header-anchor" href="#事务"><span>事务</span></a></h2><p>Redis 事务可以一次执行多个命令， 并且带有以下三个重要的保证：</p><ul><li>批量操作在发送 EXEC 命令前被放入队列缓存。</li><li>收到 EXEC 命令后进入事务执行，事务中任意命令执行失败，其余的命令依然被执行。</li><li>在事务执行过程，其他客户端提交的命令请求不会插入到事务执行命令序列中。</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 标记一个事务块的开始。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">multi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 执行所有事务块内的命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">EXEC</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 取消事务，放弃执行事务块内的所有命令。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">DISCARD</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 取消 WATCH 命令对所有 key 的监视。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">UNWATCH</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 监视一个(或多个) key ，如果在事务执行之前这个(或这些) key 被其他命令所改动，那么事务将被打断。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">WATCH</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [key </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">...]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,90),h=[e];function t(k,p){return a(),s("div",null,h)}const c=i(l,[["render",t],["__file","redis.html.vue"]]),y=JSON.parse('{"path":"/dev/java/redis/redis.html","title":"redis","lang":"zh-CN","frontmatter":{"icon":"book","date":"2024-06-24T00:00:00.000Z","category":["redis"],"tag":["redis"],"headerDepth":5,"description":"redis 概述 redis 是什么? Redis（Remote Dictionary Server ），即远程字典服务，是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。 免费开源! 是当下最热门的NoSQL技术之一! 也被人称之为结构化数据库! redis 能做什么? 内...","head":[["meta",{"property":"og:url","content":"https://jia-shuaijie.github.io/dev/java/redis/redis.html"}],["meta",{"property":"og:site_name","content":"黑色的小火苗"}],["meta",{"property":"og:title","content":"redis"}],["meta",{"property":"og:description","content":"redis 概述 redis 是什么? Redis（Remote Dictionary Server ），即远程字典服务，是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。 免费开源! 是当下最热门的NoSQL技术之一! 也被人称之为结构化数据库! redis 能做什么? 内..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://i.jpg.dog/fde8293541278f1dae1f55be6b23bd99.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-01T07:41:46.000Z"}],["meta",{"property":"article:author","content":"黑色的小火苗"}],["meta",{"property":"article:tag","content":"redis"}],["meta",{"property":"article:published_time","content":"2024-06-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-01T07:41:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"redis\\",\\"image\\":[\\"https://i.jpg.dog/fde8293541278f1dae1f55be6b23bd99.png\\",\\"https://i.jpg.dog/fb15e2e3bc5eb4fd9124590754005d48.png\\",\\"https://i.jpg.dog/b99bd7bdfebf880a18d7a35dff1d4ab2.png\\"],\\"datePublished\\":\\"2024-06-24T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-01T07:41:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"黑色的小火苗\\",\\"url\\":\\"https://jia-shuaijie.github.io\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"Linux安装","slug":"linux安装","link":"#linux安装","children":[]},{"level":2,"title":"测试性能","slug":"测试性能","link":"#测试性能","children":[]},{"level":2,"title":"基础知识","slug":"基础知识","link":"#基础知识","children":[]},{"level":2,"title":"五大数据类型","slug":"五大数据类型","link":"#五大数据类型","children":[{"level":3,"title":"Redis-key","slug":"redis-key","link":"#redis-key","children":[]},{"level":3,"title":"String(字符串)","slug":"string-字符串","link":"#string-字符串","children":[{"level":4,"title":"同时设置或获取多个属性值","slug":"同时设置或获取多个属性值","link":"#同时设置或获取多个属性值","children":[]},{"level":4,"title":"字符串范围获取或替换","slug":"字符串范围获取或替换","link":"#字符串范围获取或替换","children":[]},{"level":4,"title":"自增或自减","slug":"自增或自减","link":"#自增或自减","children":[]}]},{"level":3,"title":"List(列表)","slug":"list-列表","link":"#list-列表","children":[{"level":4,"title":"获取列表中的元素","slug":"获取列表中的元素","link":"#获取列表中的元素","children":[]},{"level":4,"title":"移除或弹出一个元素","slug":"移除或弹出一个元素","link":"#移除或弹出一个元素","children":[]},{"level":4,"title":"阻塞命令","slug":"阻塞命令","link":"#阻塞命令","children":[]},{"level":4,"title":"保留区间内的元素","slug":"保留区间内的元素","link":"#保留区间内的元素","children":[]}]},{"level":3,"title":"Set(集合)","slug":"set-集合","link":"#set-集合","children":[{"level":4,"title":"交集","slug":"交集","link":"#交集","children":[]},{"level":4,"title":"并集","slug":"并集","link":"#并集","children":[]}]},{"level":3,"title":"Hash","slug":"hash","link":"#hash","children":[{"level":4,"title":"字段添加指定增量","slug":"字段添加指定增量","link":"#字段添加指定增量","children":[]}]},{"level":3,"title":"Zset(有序集合)","slug":"zset-有序集合","link":"#zset-有序集合","children":[{"level":4,"title":"对分数进行指定增量","slug":"对分数进行指定增量","link":"#对分数进行指定增量","children":[]}]},{"level":3,"title":"Geo(地理位置)","slug":"geo-地理位置","link":"#geo-地理位置","children":[]},{"level":3,"title":"hyperLogLog(基数统计)","slug":"hyperloglog-基数统计","link":"#hyperloglog-基数统计","children":[]},{"level":3,"title":"stream","slug":"stream","link":"#stream","children":[{"level":4,"title":"消息队列相关命令","slug":"消息队列相关命令","link":"#消息队列相关命令","children":[]},{"level":4,"title":"消费者组相关命令","slug":"消费者组相关命令","link":"#消费者组相关命令","children":[]}]}]},{"level":2,"title":"事务","slug":"事务","link":"#事务","children":[]}],"git":{"createdTime":1719477622000,"updatedTime":1719819706000,"contributors":[{"name":"黑色的小火苗","email":"jiashuaijie@yeah.net","commits":2}]},"readingTime":{"minutes":15.32,"words":4597},"filePathRelative":"dev/java/redis/redis.md","localizedDate":"2024年6月24日","excerpt":"\\n<h2>概述</h2>\\n<blockquote>\\n<p>redis 是什么?</p>\\n</blockquote>\\n<p>Redis（Remote Dictionary Server ），即远程字典服务，是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。</p>\\n<p>免费开源! 是当下最热门的NoSQL技术之一! 也被人称之为结构化数据库!</p>\\n<blockquote>\\n<p>redis 能做什么?</p>\\n</blockquote>\\n<ol>\\n<li>内存存储,持久化,内存中是断电即失,所以说持久化很重要(rdb,aof)</li>\\n<li>效率高,可用用于高速缓存</li>\\n<li>发布订阅系统</li>\\n<li>地图信息分析</li>\\n<li>计时器,计数器(浏览量!)</li>\\n<li>...</li>\\n</ol>","autoDesc":true}');export{c as comp,y as data};
